{"ast":null,"code":"var __jsx = React.createElement;\n// import React from 'react';\n// import '../App.css';\n// function Email() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//      <form>\n//         <h6 className=\"ema\"> Email:</h6>\n//     <input\n//     className=\"email\"            \n//     id=\"email\"\n//     type=\"email\"\n//     />\n//     <br></br>\n//     <h6 className=\"mes\">Message:</h6> <input\n//     className=\"message\"            \n//     id=\"message\"\n//     type=\"mesage\"\n//     /><br></br>\n//     <button className=\"submit\" type=\"submit\" value=\"submit\" >submit</button>\n//     </form>\n//       </header>\n//     </div>\n//   );\n// }\n// export default Email;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport css from '../style.css';\nconst navStyle = {\n  color: 'white'\n}; // for guide...\n\nconst hd = {\n  pathname: '/guide',\n  query: {\n    name: 'guide'\n  }\n};\nconst a = {\n  pathname: '/guide'\n}; // for email...\n\nclass Email extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      feedback: '',\n      name: '',\n      email: 'selvam@nuatransmedia.com'\n    };\n    this.handleChangee = this.handleChangee.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: css.App1\n    }, __jsx(\"nav\", null, __jsx(\"div\", {\n      className: css.col\n    }, __jsx(\"li\", {\n      className: css.navi\n    }, __jsx(Link, {\n      href: hd,\n      as: a\n    }, __jsx(\"a\", null, \"Contact\")))), __jsx(\"div\", {\n      className: css.col1\n    }, __jsx(\"li\", {\n      className: css.navi\n    }, \"Guide\")), __jsx(\"div\", {\n      className: css.col2\n    }, __jsx(\"li\", {\n      className: css.navi\n    }, \"Config\"))), __jsx(\"h6\", {\n      className: css.ema\n    }, \"Name:\"), __jsx(\"div\", null, __jsx(\"textarea\", {\n      id: \"test-mailing\",\n      className: css.testmailing,\n      name: \"test-mailing\",\n      onChange: this.handleChange,\n      placeholder: \"Write some Message Here\",\n      required: true,\n      value: this.state.feedback,\n      style: {\n        width: '85%',\n        height: '150px'\n      }\n    }), __jsx(\"h6\", {\n      className: css.mes\n    }, \"Message:\"), __jsx(\"textarea\", {\n      id: \"test\",\n      className: css.test,\n      name: \"test\",\n      onChange: this.handleChangee,\n      placeholder: \"Name\",\n      required: true,\n      value: this.state.name,\n      style: {\n        width: '85%',\n        height: '25px'\n      }\n    })), __jsx(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      className: css.btn_btnsubmit,\n      onClick: this.handleSubmit\n    }));\n  }\n\n  handleChange(event) {\n    this.setState({\n      feedback: event.target.value\n    });\n  }\n\n  handleChangee(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const templateId = 'template_XEYcWzvY';\n    this.sendFeedback(templateId, {\n      message_html: this.state.feedback,\n      from_name: this.state.name,\n      reply_to: this.state.email\n    });\n  }\n\n  sendFeedback(templateId, variables) {\n    window.emailjs.send('gmail', templateId, variables).then(res => {\n      alert(\"Message send successfully\");\n    }); // Handle errors here however you like, or use a React error boundary\n\n    alert(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n}\n\nexport default Email;","map":{"version":3,"sources":["/Users/nua/Desktop/Selvam/testing/pages/email.js"],"names":["React","Component","Link","css","navStyle","color","hd","pathname","query","name","a","Email","constructor","props","state","feedback","email","handleChangee","bind","handleChange","handleSubmit","render","App1","col","navi","col1","col2","ema","testmailing","width","height","mes","test","btn_btnsubmit","event","setState","target","value","templateId","sendFeedback","message_html","from_name","reply_to","variables","window","emailjs","send","then","res","alert","err","console","error"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import '../App.css';\n\n// function Email() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//      <form>\n//         <h6 className=\"ema\"> Email:</h6>\n//     <input\n//     className=\"email\"            \n//     id=\"email\"\n//     type=\"email\"\n//     />\n//     <br></br>\n//     <h6 className=\"mes\">Message:</h6> <input\n//     className=\"message\"            \n//     id=\"message\"\n//     type=\"mesage\"\n//     /><br></br>\n//     <button className=\"submit\" type=\"submit\" value=\"submit\" >submit</button>\n//     </form>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default Email;\n\n\nimport React ,{Component} from 'react';\nimport Link from 'next/link';\nimport css from '../style.css'\nconst navStyle = {\n  color: 'white'\n}\n// for guide...\nconst hd = {\n  pathname: '/guide',\n  query: {name: 'guide'},\n}\nconst a = {\n  pathname: '/guide',\n}\n\n// for email...\n\n\nclass Email extends Component {\n  constructor(props) {\n\tsuper(props);\n  this.state = { feedback: '', name: '', email: 'selvam@nuatransmedia.com' };\n  this.handleChangee = this.handleChangee.bind(this);\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n \n  \n  render() {\n\treturn(\n  \t<div className={css.App1}>\n      <nav>\n      {/* <h2>Single Signon</h2> */}\n      \n      \n     <div className={css.col}>\n     \n      <li className={css.navi}>\n       \n      <Link href={hd} as={a}>\n        <a>\n          Contact\n          </a>\n          </Link>\n         \n          </li>\n          \n          </div>\n\n      <div className={css.col1}>\n      <li className={css.navi}>Guide</li></div>\n\n\n      <div className={css.col2}>\n      <li className={css.navi}>Config</li></div>\n      </nav>\n\n\n    \t<h6 className={css.ema}>Name:</h6>\n    \t<div>\n      \t<textarea\n          id=\"test-mailing\"\n          className={css.testmailing}\n        \tname=\"test-mailing\"\n        \tonChange={this.handleChange}\n        \tplaceholder=\"Write some Message Here\"\n        \trequired\n        \tvalue={this.state.feedback}\n        \tstyle={{width: '85%', height: '150px'}}\n      \t/>\n        <h6 className={css.mes}>Message:</h6>\n        \t<textarea\n          id=\"test\"\n          className={css.test}\n        \tname=\"test\"\n        \tonChange={this.handleChangee}\n        \tplaceholder=\"Name\"\n        \trequired\n        \tvalue={this.state.name}\n          style={{width: '85%', height: '25px'}}\n      \t/>\n    \t</div>\n    \t<input type=\"button\" value=\"Submit\" className={css.btn_btnsubmit} onClick={this.handleSubmit} />\n  \t</div>\n  )  \n}\n  \n\n  handleChange(event) {\n    this.setState({feedback: event.target.value})\n  }\n  handleChangee(event) {\n    this.setState({name: event.target.value})\n  }\n\n  handleSubmit (event) {\n    const templateId = 'template_XEYcWzvY';\n  \n    this.sendFeedback(templateId, {message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email})\n    }\n  \n    sendFeedback (templateId, variables) {\n    window.emailjs.send(\n      'gmail', templateId,\n      variables\n      ).then(res => {\n        \n       alert(\"Message send successfully\")\n      })\n      // Handle errors here however you like, or use a React error boundary\n      alert(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n    }\n  }\n\n  export default Email;"]},"metadata":{},"sourceType":"module"}