{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react'; // import insta from './logos/amazon_logo.png';\n\nimport SocialButton from './Amazon/Social'; // import google from './logos/google_logo.png'\n\nimport UserCard from './Amazon/userCard';\nimport axios from 'axios';\nimport Amazon from '../public/amazon';\nimport Google from '../public/google';\nconst image = {\n  logo: {\n    position: 'absolute',\n    top: '15px',\n    left: '30px',\n    cursor: 'pointer'\n  },\n  logo1: {\n    position: 'absolute',\n    top: '15px',\n    left: '155px',\n    cursor: 'pointer'\n  },\n  logo2: {\n    position: 'absolute',\n    top: '15px',\n    left: '285px',\n    cursor: 'pointer'\n  },\n  logo3: {\n    position: 'absolute',\n    top: '15px',\n    left: '415px',\n    cursor: 'pointer'\n  },\n  logo4: {\n    position: 'absolute',\n    top: '15px',\n    left: '545px',\n    cursor: 'pointer'\n  },\n  loginwith: {\n    position: 'absolute',\n    top: '150px',\n    left: '150px'\n  }\n};\nexport default class Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logged: false,\n      user: {},\n      shopURL: 'sociallog.myshopify.com',\n      currentProvider: '',\n      postDat: {}\n    };\n    this.nodes = {};\n    this.onLoginSuccess = this.onLoginSuccess.bind(this);\n    this.onLoginFailure = this.onLoginFailure.bind(this);\n    this.onLogoutSuccess = this.onLogoutSuccess.bind(this);\n    this.onLogoutFailure = this.onLogoutFailure.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  setNodeRef(provider, node) {\n    if (node) {\n      this.nodes[provider] = node;\n    }\n  }\n\n  onLoginSuccess(user) {\n    const postData = {\n      \"customer\": {\n        \"first_name\": user._profile.firstName,\n        \"last_name\": user._profile.lastName,\n        \"email\": user._profile.email,\n        \"phone\": '',\n        \"addresses\": []\n      }\n    };\n    console.log(user);\n    console.log(postData);\n    fetch('http://localhost:3000/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify({\n        \"customer\": {\n          \"first_name\": user._profile.firstName,\n          \"last_name\": user._profile.lastName,\n          \"email\": user._profile.email,\n          \"phone\": '',\n          \"addresses\": []\n        }\n      })\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onLoginFailure(err) {\n    console.error(err);\n    this.setState({\n      logged: false,\n      currentProvider: '',\n      user: {}\n    });\n  }\n\n  onLogoutSuccess() {\n    this.setState({\n      logged: false,\n      currentProvider: '',\n      user: {}\n    });\n  }\n\n  onLogoutFailure(err) {\n    console.error(err);\n  }\n\n  logout() {\n    const {\n      logged,\n      currentProvider\n    } = this.state;\n\n    if (logged && currentProvider) {\n      this.nodes[currentProvider].props.triggerLogout();\n    }\n  }\n\n  render() {\n    let children;\n\n    if (this.state.logged) {\n      children = __jsx(UserCard, {\n        user: this.state.user,\n        logout: this.logout\n      });\n    } else {\n      children = [__jsx(SocialButton, {\n        provider: \"facebook\",\n        appId: \"743738122718119\",\n        onLoginSuccess: this.onLoginSuccess,\n        onLoginFailure: this.onLoginFailure,\n        onLogoutSuccess: this.onLogoutSuccess,\n        getInstance: this.setNodeRef.bind(this, 'facebook'),\n        key: 'facebook'\n      }, __jsx(\"img\", {\n        style: image.logo,\n        src: \"https://i.pinimg.com/originals/58/f4/72/58f4723d8f23906bdcb058604075ad2a.png\",\n        title: \"facebook login\",\n        alt: \"facebook\",\n        height: \"150px\",\n        width: \"150px\"\n      })), __jsx(SocialButton, {\n        provider: \"google\",\n        appId: \"555371152154-faiudnv4deckojvcuqsh2kdpf5obe12u.apps.googleusercontent.com\",\n        onLoginSuccess: this.onLoginSuccess,\n        onLoginFailure: this.onLoginFailure,\n        onLogoutSuccess: this.onLogoutSuccess,\n        onLogoutFailure: this.onLogoutFailure,\n        getInstance: this.setNodeRef.bind(this, 'google'),\n        key: 'google'\n      }, __jsx(Google, null)), __jsx(SocialButton, {\n        provider: \"amazon\",\n        appId: \"amzn1.application-oa2-client.0623170e36984f82a8b4ed9b1230a1cb\",\n        onLoginSuccess: this.onLoginSuccess,\n        onLoginFailure: this.onLoginFailure,\n        onLogoutSuccess: this.onLogoutSuccess,\n        getInstance: this.setNodeRef.bind(this, 'amazon'),\n        key: 'amazon'\n      }, __jsx(Amazon, null)), __jsx(\"h5\", {\n        style: image.loginwith\n      }, \"or login with\")];\n    }\n\n    return children;\n  }\n\n}","map":{"version":3,"sources":["/Users/nua/Desktop/Selvam/testing/finally/pages/Amazonlogin.js"],"names":["React","Component","SocialButton","UserCard","axios","Amazon","Google","image","logo","position","top","left","cursor","logo1","logo2","logo3","logo4","loginwith","Demo","constructor","props","state","logged","user","shopURL","currentProvider","postDat","nodes","onLoginSuccess","bind","onLoginFailure","onLogoutSuccess","onLogoutFailure","logout","setNodeRef","provider","node","postData","_profile","firstName","lastName","email","console","log","fetch","method","headers","body","then","res","catch","err","error","setState","triggerLogout","render","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import insta from './logos/amazon_logo.png';\nimport SocialButton from './Amazon/Social'\n// import google from './logos/google_logo.png'\nimport UserCard from './Amazon/userCard'\nimport axios from 'axios';\nimport Amazon from '../public/amazon';\nimport Google from '../public/google';\nconst image = {\n  logo: {\n  position: 'absolute',\n  top: '15px',\n  left: '30px',\n  cursor: 'pointer',\n},\nlogo1: {\n  position: 'absolute',\n  top: '15px',\n  left: '155px', \n  cursor: 'pointer',\n},\n\nlogo2: {\n  position: 'absolute',\n  top: '15px',\n  left: '285px', \n  cursor: 'pointer',\n},\nlogo3: {\n  position: 'absolute',\n  top: '15px',\n  left: '415px',\n  cursor: 'pointer',\n},\nlogo4: {\n  position: 'absolute',\n  top: '15px',\n  left: '545px',\n  cursor: 'pointer',\n},\nloginwith: {\n  position: 'absolute',\n  top: '150px',\n  left: '150px',\n}\n}\nexport default class Demo extends Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      logged: false,\n      user: {},\n      shopURL: 'sociallog.myshopify.com',\n      currentProvider: '',\n      postDat: {}\n    }\n    this.nodes = {}\n\n    this.onLoginSuccess = this.onLoginSuccess.bind(this)\n    this.onLoginFailure = this.onLoginFailure.bind(this)\n    this.onLogoutSuccess = this.onLogoutSuccess.bind(this)\n    this.onLogoutFailure = this.onLogoutFailure.bind(this)\n    this.logout = this.logout.bind(this)\n  }\n   \n\n   \n  setNodeRef (provider, node) {\n    if (node) {\n      this.nodes[ provider ] = node\n    }\n  }\n\n  onLoginSuccess (user) {\n    const postData =  {\n      \"customer\": {\n        \"first_name\": user._profile.firstName,\n        \"last_name\": user._profile.lastName,\n        \"email\": user._profile.email,\n        \"phone\": '',\n        \"addresses\": []\n      }\n    }\n    \n    console.log(user)\n    \n    console.log(postData)\n\n    fetch('http://localhost:3000/products', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n          \n      },\n      body: JSON.stringify({\n        \"customer\": {\n          \"first_name\": user._profile.firstName,\n          \"last_name\": user._profile.lastName,\n          \"email\": user._profile.email,\n          \"phone\": '',\n          \"addresses\": []\n        }\n      })\n    }).then(res => {\n      console.log(res)\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  onLoginFailure (err) {\n    console.error(err)\n\n    this.setState({\n      logged: false,\n      currentProvider: '',\n      user: {}\n    })\n  }\n\n  onLogoutSuccess () {\n    this.setState({\n      logged: false,\n      currentProvider: '',\n      user: {}\n    })\n  }\n\n  onLogoutFailure (err) {\n    console.error(err)\n  }\n\n  logout () {\n    const { logged, currentProvider } = this.state\n\n    if (logged && currentProvider) {\n      this.nodes[currentProvider].props.triggerLogout()\n    }\n  }\n\n  render () {\n    let children\n\n    if (this.state.logged) {\n      children = <UserCard user={this.state.user} logout={this.logout} />\n    } else {\n      \n      children = [\n        <SocialButton\n          provider='facebook'\n          appId=\"743738122718119\"\n          onLoginSuccess={this.onLoginSuccess}\n          onLoginFailure={this.onLoginFailure}\n          onLogoutSuccess={this.onLogoutSuccess}\n          getInstance={this.setNodeRef.bind(this, 'facebook')}\n          key={'facebook'}\n        >\n          <img style={image.logo} src=\"https://i.pinimg.com/originals/58/f4/72/58f4723d8f23906bdcb058604075ad2a.png\" title=\"facebook login\" alt=\"facebook\" height=\"150px\" width=\"150px\" />\n        </SocialButton>,\n        <SocialButton\n          provider='google'\n          appId='555371152154-faiudnv4deckojvcuqsh2kdpf5obe12u.apps.googleusercontent.com'\n          onLoginSuccess={this.onLoginSuccess}\n          onLoginFailure={this.onLoginFailure}\n          onLogoutSuccess={this.onLogoutSuccess}\n          onLogoutFailure={this.onLogoutFailure}\n          getInstance={this.setNodeRef.bind(this, 'google')}\n          key={'google'}\n        >\n          <Google />\n        </SocialButton>,\n         <SocialButton\n         provider='amazon'\n         appId='amzn1.application-oa2-client.0623170e36984f82a8b4ed9b1230a1cb'\n         onLoginSuccess={this.onLoginSuccess}\n         onLoginFailure={this.onLoginFailure}\n         onLogoutSuccess={this.onLogoutSuccess}\n         getInstance={this.setNodeRef.bind(this, 'amazon')}\n         key={'amazon'}\n       >\n         <Amazon />\n       </SocialButton>,\n          <h5 style={image.loginwith}>or login with</h5>\n      \n      ]\n\n    \n    }\n\n    return children\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}